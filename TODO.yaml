base:
  dev:
    done:
      - imagine the whole project
        - requirements
        - front page without auth that allows you to book a car using the email
        - my reservations page authorized by email
        - admin dashboard to control vehicles to book
        - admin dashboard to cancel the reservations
        - spring + react
        - dockerized
        - deployed to self brewed kubernetes at digital ocean
        - processed with github actions
      - create READMEs
      - create the estimated plan
      - - + basic spring project w/actuator
        - + basic react project w/test api call
        - + some auth service embedded into the api
        - + basic authorized page
        - + make authenticated api call to return the token contents
      - + set up domain layer
        + attach hibernate to start persisting data
        + introduce some data seeding (database population)
      - create my reservations screen
        + the outlook is done
        + cover with tests
      - create "make new reservation" screen
        + the outlook is done
        + cover with tests
      - create single new reservation screen
        + create the outlook
        + create the api response with the occupied hours
        + cover with tests
      - create role based access control
        + make fe bundle check the roles
        + make be check the roles at the controller level
      - create admin cancel reservations screen +
    todo:
  postdev:
    - deploy at k8s
    - end to end tracing
    - ci/cd pipeline
    - grafana metrics & public dashboards
    - google, github and linked in IDPs
    - revisit readmes