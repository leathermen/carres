version: "3.9"
# this compose file exists for local development only
services:
  website:
    image: nikitades/carres-website:latest
    build: apps/website
    restart: unless-stopped
    depends_on:
      api:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - 3000:3000
    environment:
      NEXTAUTH_SECRET: YMKLHMQI4f1GOMf83AEUZa9zUWqSdBz39CHY2PMVHM4=
      NEXTAUTH_URL: http://localhost:3001
      KEYCLOAK_CLIENT_ID: app
      KEYCLOAK_CLIENT_SECRET: lpk2c9bzFFvLqnqeTGNCKWJq76UtENMf
      KEYCLOAK_WELL_KNOWN_ADDRESS: http://keycloak:8080/realms/carres
  api:
    image: nikitades/carres-api:latest
    build: apps/api
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - 8080:8080
  keycloak_import:
    # serves as a one-shot program to just import new realms if old ones were lost due to database files erasure for instance
    image: nikitades/carres-keycloak:latest
    restart: "no"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./apps/keycloak/realm.json:/opt/keycloak/realm.json
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KC_DB_URL: jdbc:postgresql://database:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    command:
      [
        "--verbose",
        "import",
        "--override=false",
        "--file=/opt/keycloak/realm.json",
      ]
  keycloak:
    image: nikitades/carres-keycloak:latest
    build: apps/keycloak
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
      keycloak_import:
        condition: service_completed_successfully
    ports:
      - 8090:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KC_DB_URL: jdbc:postgresql://database:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_URL: http://localhost:3001/auth
      KC_HOSTNAME_ADMIN_URL: http://localhost:3001/auth
    command:
      [
        "start",
        "--optimized",
        "--http-enabled=true",
        "--hostname-strict-https=false",
      ]
  database:
    image: postgres:15
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./apps/database/files:/var/lib/postgresql/data
      - ./apps/database/init.sql:/docker-entrypoint-initdb.d/50-init.sql
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 15s
  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 9090:8080
    depends_on:
      database:
        condition: service_healthy
    environment:
      ADMINER_DESIGN: hever
      ADMINER_DEFAULT_SERVER: database
      ADMINER_DEFAULT_TYPE: postgres
      ADMINER_DEFAULT_USER: postgres
      ADMINER_DEFAULT_PORT: 5432
  proxy:
    image: nikitades/carres-proxy:latest
    build: apps/proxy
    restart: unless-stopped
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - 3001:8080
